heat_template_version: 2016-04-08

#  GfK Online Pricing Intelligence
#  Production Platform Orchestration Template (HEAT)
#  http://docs.openstack.org/developer/heat/template_guide/hot_spec.html
#  http://docs.openstack.org/developer/heat/template_guide/openstack.html

description: |
  This is a template to deploy a windows server

#  VERSION HISTORY
#
#  Version  Date    Author      Comments
#  -------  ----------  ------------  -----------------------------
#  1.0    2016-04-26  Tommy Monk    Initial Version

parameters:

  name_map:
    type: json
    
  index:
    type: string
    
  admin_pass:
    type: string
    
  image:
    type: string
    
  flavor:
    type: string

  network_id:
    type: string
      
  domain:
    type: string
    
  oupath:
    type: string
    
  credential_username:
    type: string

  credential_password:
    type: string

resources:
 server:
    type: OS::Nova::Server
    properties:
      image: { get_param: image }
      flavor: { get_param: flavor }
      name: { get_param: [name_map, { get_param: index}] }
      admin_pass: { get_param: admin_pass }
      networks:
      - network: 11111111-1111-1111-1111-111111111111
      - network: { get_param: network_id }
      metadata:
        rax-heat: { get_param: "OS::stack_id" }
        stack-name: { get_param: "OS::stack_name" }
      personality:
        'c:\cloud-automation\bootstrap.ps1':
          str_replace:
            template: |                         
              # Set DNS Servers
              Set-DnsClientServerAddress -InterfaceAlias "RC-FW-*" -ServerAddresses ("172.30.1.7","172.30.1.8")
              
              # Create credentials
              $secpasswd = ConvertTo-SecureString "$cCredentialPassword" -AsPlainText -Force
              $credential = New-Object System.Management.Automation.PSCredential("$cCredentialUser", $secpasswd)
              
              # Add to domain
              Add-Computer -DomainName $cDomain -OUPath "$cOUPath" -Credential $credential -Restart
            params:
              $cDomain:
                get_param: domain
              $cOUPath:
                get_param: oupath
              $cCredentialUser:
                get_param: credential_username
              $cCredentialPassword:
                get_param: credential_password